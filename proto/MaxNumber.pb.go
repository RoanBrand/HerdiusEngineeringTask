// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MaxNumber.proto

package MaxNumber

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	In                   int64    `protobuf:"varint,1,opt,name=in,proto3" json:"in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_422267baf566425d, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetIn() int64 {
	if m != nil {
		return m.In
	}
	return 0
}

type Response struct {
	Max                  int64    `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_422267baf566425d, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "MaxNumber.Request")
	proto.RegisterType((*Response)(nil), "MaxNumber.Response")
}

func init() { proto.RegisterFile("MaxNumber.proto", fileDescriptor_422267baf566425d) }

var fileDescriptor_422267baf566425d = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xf7, 0x4d, 0xac, 0xf0,
	0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x49, 0x72, 0xb1, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xf1, 0x71, 0x31, 0x65, 0xe6,
	0x49, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x31, 0x65, 0xe6, 0x29, 0xc9, 0x70, 0x71, 0x04, 0xa5,
	0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x09, 0x70, 0x31, 0xe7, 0x26, 0x56, 0x40, 0x25, 0x41,
	0x4c, 0x23, 0x6f, 0x2e, 0x84, 0x29, 0x42, 0x76, 0x5c, 0xbc, 0x6e, 0x99, 0x79, 0x29, 0x08, 0x01,
	0x21, 0x3d, 0x84, 0x9d, 0x50, 0xf3, 0xa5, 0x84, 0x51, 0xc4, 0x20, 0x06, 0x2b, 0x31, 0x68, 0x30,
	0x1a, 0x30, 0x26, 0xb1, 0x81, 0xdd, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x83, 0xcc, 0xc1,
	0x0e, 0xaa, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MaxNumberClient is the client API for MaxNumber service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MaxNumberClient interface {
	FindMaxNumber(ctx context.Context, opts ...grpc.CallOption) (MaxNumber_FindMaxNumberClient, error)
}

type maxNumberClient struct {
	cc *grpc.ClientConn
}

func NewMaxNumberClient(cc *grpc.ClientConn) MaxNumberClient {
	return &maxNumberClient{cc}
}

func (c *maxNumberClient) FindMaxNumber(ctx context.Context, opts ...grpc.CallOption) (MaxNumber_FindMaxNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MaxNumber_serviceDesc.Streams[0], "/MaxNumber.MaxNumber/FindMaxNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &maxNumberFindMaxNumberClient{stream}
	return x, nil
}

type MaxNumber_FindMaxNumberClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type maxNumberFindMaxNumberClient struct {
	grpc.ClientStream
}

func (x *maxNumberFindMaxNumberClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maxNumberFindMaxNumberClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaxNumberServer is the server API for MaxNumber service.
type MaxNumberServer interface {
	FindMaxNumber(MaxNumber_FindMaxNumberServer) error
}

func RegisterMaxNumberServer(s *grpc.Server, srv MaxNumberServer) {
	s.RegisterService(&_MaxNumber_serviceDesc, srv)
}

func _MaxNumber_FindMaxNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaxNumberServer).FindMaxNumber(&maxNumberFindMaxNumberServer{stream})
}

type MaxNumber_FindMaxNumberServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type maxNumberFindMaxNumberServer struct {
	grpc.ServerStream
}

func (x *maxNumberFindMaxNumberServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maxNumberFindMaxNumberServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MaxNumber_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MaxNumber.MaxNumber",
	HandlerType: (*MaxNumberServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindMaxNumber",
			Handler:       _MaxNumber_FindMaxNumber_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "MaxNumber.proto",
}
